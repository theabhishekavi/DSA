Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: [1,2,2]
Output:
[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]


class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        Arrays.sort(nums);
        subsetsHelper(nums,temp,result,0);
        return result;
    
    }
    public void subsetsHelper(int[] nums,List<Integer> temp,List<List<Integer>> result,int start){
        result.add(new ArrayList<>(temp));
        for(int i = start;i<nums.length;i++){
            temp.add(nums[i]);
            subsetsHelper(nums,temp,result,i+1);
            temp.remove(temp.size()-1);
            while(i+1<nums.length && nums[i]==nums[i+1])
                i++;
        }
    }
}