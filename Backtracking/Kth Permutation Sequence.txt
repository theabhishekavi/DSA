60. Permutation Sequence

The set [1,2,3,...,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order, we get the following sequence for n = 3:

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Note:

Given n will be between 1 and 9 inclusive.
Given k will be between 1 and n! inclusive.
Example 1:

Input: n = 3, k = 3
Output: "213"
Example 2:

Input: n = 4, k = 9
Output: "2314"



class Solution {
    boolean found = false;
    String res = "";
    int count = 0;
    public String getPermutation(int n, int k) {
        int[] nums = new int[n];
        for(int i = 0;i<n;i++)
            nums[i] = i+1;
        
        List<String> temp = new ArrayList<>();
        boolean[] visited = new boolean[n];
        permuteHelper(k,temp,n,nums,visited);
        return res;
    }
    
    void permuteHelper(int k, List<String> temp,int n,int[] nums,boolean[] visited){
        if(temp.size()==n){    
           if(count == k-1){ 
               found = true;
               for(String t:temp)
                   res+=t;
               
           }
            else{
                count++;
            }
            return;
        }
        if(found)
            return;
        
        for(int i = 0;i<n;i++){
            if(visited[i]) continue;
            visited[i] = true;
            temp.add(String.valueOf(nums[i]));
            permuteHelper(k,temp,n,nums,visited);
            if(found)
                break;
            visited[i] = false;
            temp.remove(temp.size()-1);
        }
    }
    
}